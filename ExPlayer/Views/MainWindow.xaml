<Window
    x:Class="ExPlayer.Views.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:converters="clr-namespace:MyLibrary.Converters;assembly=MyLibrary"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:models="clr-namespace:ExPlayer.Models"
    xmlns:prism="http://prismlibrary.com/"
    xmlns:viewModels="clr-namespace:ExPlayer.ViewModels"
    Title="{Binding Title}"
    Width="720"
    Height="400"
    d:DataContext="{d:DesignInstance viewModels:MainWindowViewModel}"
    prism:ViewModelLocator.AutoWireViewModel="True"
    mc:Ignorable="d">

    <Window.Resources>
        <converters:NumberFormatConverter x:Key="NumberFormatConverter" />
    </Window.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <!--  メニュバーとパスバーを含むスタックパネル  -->
            <RowDefinition Height="Auto" />

            <!--  ListView  -->
            <RowDefinition />

            <!--  操作UI  -->
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <!--  最上部メニュー  -->
        <StackPanel Grid.Row="0">
            <Menu>
                <MenuItem Header="表示">
                    <MenuItem
                        Header="不要なファイルも表示"
                        IsCheckable="True"
                        IsChecked="{Binding FileListViewModel.IncludeAllFiles}" />
                </MenuItem>
            </Menu>

            <TextBox Text="{Binding CurrentDirectoryPath, UpdateSourceTrigger=PropertyChanged}">
                <TextBox.InputBindings>
                    <KeyBinding Key="Enter" Command="{Binding JumpToDirectoryCommand}" />
                </TextBox.InputBindings>
            </TextBox>
        </StackPanel>

        <ListView
            Grid.Row="1"
            HorizontalContentAlignment="Stretch"
            AlternationCount="2"
            ItemsSource="{Binding FileListViewModel.Files}"
            SelectedItem="{Binding FileListViewModel.SelectedItem}">
            <ListView.InputBindings>
                <KeyBinding Key="Enter" Command="{Binding OpenCommand}" />
                <KeyBinding Key="BackSpace" Command="{Binding MoveParentDirectoryCommand}" />
            </ListView.InputBindings>

            <i:Interaction.Behaviors>
                <models:CursorBehavior />
            </i:Interaction.Behaviors>

            <ListView.ItemTemplate>
                <DataTemplate DataType="{x:Type models:FileInfoWrapper}">

                    <Border>
                        <Border.InputBindings>
                            <MouseBinding Command="{Binding DataContext.OpenCommand, RelativeSource={RelativeSource AncestorType=ListView}}" MouseAction="LeftDoubleClick" />
                        </Border.InputBindings>

                        <StackPanel Orientation="Horizontal">

                            <TextBlock Text="{Binding Index, Converter={StaticResource NumberFormatConverter}}" />

                            <Border
                                Width="1"
                                Margin="3,0"
                                Background="Black" />

                            <TextBlock Text="{Binding Name}">
                                <TextBlock.Style>
                                    <Style TargetType="TextBlock">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsDirectory}" Value="True">
                                                <Setter Property="Foreground" Value="Coral" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>

                        </StackPanel>
                    </Border>
                </DataTemplate>
            </ListView.ItemTemplate>

            <ListView.ItemContainerStyle>
                <Style TargetType="ListViewItem">
                    <Style.Triggers>
                        <Trigger Property="ItemsControl.AlternationIndex" Value="0">
                            <Setter Property="Background" Value="WhiteSmoke" />
                        </Trigger>
                        <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                            <Setter Property="Background" Value="White" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </ListView.ItemContainerStyle>

        </ListView>

        <StackPanel Grid.Row="2" Margin="2">
            <StackPanel Orientation="Horizontal">
                <StackPanel.Resources>
                    <Style x:Key="ControlButtonStyle" TargetType="Button">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="Button">

                                    <Border
                                        x:Name="border"
                                        Padding="8,2"
                                        Background="WhiteSmoke"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        CornerRadius="4">
                                        <ContentPresenter />

                                    </Border>

                                    <ControlTemplate.Triggers>
                                        <!--  マウスオーバー時のトリガー  -->
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter TargetName="border" Property="Background" Value="LightBlue" />
                                        </Trigger>

                                        <!--  押下時のトリガー  -->
                                        <Trigger Property="IsPressed" Value="True">
                                            <Setter TargetName="border" Property="Background" Value="DeepSkyBlue" />
                                        </Trigger>
                                    </ControlTemplate.Triggers>

                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </StackPanel.Resources>

                <Button Content="Play" Style="{StaticResource ControlButtonStyle}" />
                <Border Margin="4,0" />

                <Button
                    Command="{Binding StopCommand}"
                    Content="Stop"
                    Style="{StaticResource ControlButtonStyle}" />
            </StackPanel>

            <Slider
                Margin="3"
                Maximum="{Binding AudioLength}"
                TickFrequency="1"
                Value="{Binding PlaybackPosition}" />

        </StackPanel>
    </Grid>
</Window>